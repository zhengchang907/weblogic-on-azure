# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ test-workflow ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  adminVMDNS: ${{ secrets.WLS_ADMIN_SERVER_VM_DNS }}
  wlsUserName: weblogic
  wlsPassword: ${{ secrets.WLS_PASSWORD }}
  otaUsername: ${{ secrets.OTA_USERNAME }}
  otaPassword: ${{ secrets.OTA_PASSWORD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-deploy"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout WebLogic-Cafe
        id: checkout-webapp
        uses: actions/checkout@v2
        with:
          repository: zhengchang907/weblogic-on-azure
          ref: test-workflow
          path: weblogic-on-azure

      - name: Prepare setting files
        id: prepare-setting-file
        run: |
          sed -i "s/#username#/$otaUsername/g; \
            s/#password#/$otaPassword/g" \
            weblogic-on-azure/javaee/weblogic-cafe/.mvn/local-settings.xml
            
      - name: Cache dependencies
        id: cache-restore-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('weblogic-on-azure/javaee/weblogic-cafe/pom.xml') }}-${{ hashFiles('weblogic-on-azure/javaee/weblogic-cafe/.mvn/local-settings.xml') }}
            
      - name: Maven build the web app
        id: maven-build-webapp
        if: steps.cache-restore-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "build the WebLogic Cafe web app"
          echo "adminVMDNS: ${adminVMDNS}, wlsUserName: ${wlsUserName}"
          mvn -DskipTests -s weblogic-on-azure/javaee/weblogic-cafe/.mvn/local-settings.xml -Dmaven.wagon.httpconnectionManager.ttlSeconds=3600 clean install --file weblogic-on-azure/javaee/weblogic-cafe/pom.xml

      - name: Prepare script for enabling tunneling
        id: prepare-script-for-server-tunneling
        run: |
          sed -i "s|#wlsUserName#|$wlsUserName|g; \
            s|#wlsPassword#|$wlsPassword|g; \
            s|#adminVMDNS#|$adminVMDNS|g" \
            weblogic-on-azure/javaee/script/enable-tunneling.sh
      
      - name: Enable admin server tunneling
        id: enable-admin-server-tunneling
        run: |
          bash weblogic-on-azure/javaee/script/enable-tunneling.sh

      - name: Maven deploy the web app
        id: maven-deploy-webapp
        run: |
          echo "deploy the web app"
          mvn -DskipTests -s weblogic-on-azure/javaee/weblogic-cafe/.mvn/local-settings.xml -Dmaven.wagon.httpconnectionManager.ttlSeconds=3600 install -Pdeploy-wls -DadminVMDNS=${adminVMDNS} -DwlsUserName=${wlsUserName} -DwlsPassword=${wlsPassword} --file weblogic-on-azure/javaee/weblogic-cafe/pom.xml

